import os
import discord
import re

from dotenv import load_dotenv
from tools.logger import Logger
from tools.channel_manager import ChannelManager
from tools.notification_manager import NotificationManager
from database.user import UserManager

load_dotenv()

logger = Logger.get_instance()
ORDERS_CATEGORY = int(os.getenv('ORDERS_CATEGORY', 0))
ORDER_CHANNEL = int(os.getenv('ORDER_CHANNEL', 0))
ORDER_LOG_CHANNEL = int(os.getenv('ORDER_LOG_CHANNEL', 0))

class OrderModal(discord.ui.Modal):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞"""

    def __init__(self, order_type_label, order_type_value):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
        
        Args:
            order_type_label: –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞ (–¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è)
            order_type_value: –ó–Ω–∞—á–µ–Ω–∏–µ —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞ (–¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏)
        """
        super().__init__(title=f"–ó–∞–ø—Ä–æ—Å: {order_type_label}")
        self.order_type_label = order_type_label
        self.order_type_value = order_type_value
        
        # –ü–æ–ª–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –∏–≥—Ä–æ–≤—ã—Ö —Å—Ç–∞—Ç–∏–∫–æ–≤
        self.game_statics = discord.ui.TextInput(
            label="–ò–≥—Ä–æ–≤—ã–µ —Å—Ç–∞—Ç–∏–∫–∏",
            placeholder="–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ –∏–≥—Ä–æ–≤—ã–µ —Å—Ç–∞—Ç–∏–∫–∏...",
            required=True,
            style=discord.TextStyle.short,
            max_length=1000
        )
        
        # –ü–æ–ª–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤
        self.evidence = discord.ui.TextInput(
            label="–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
            placeholder="–£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã/–≤–∏–¥–µ–æ –∏–ª–∏ –¥—Ä—É–≥–∏–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞...",
            required=True,
            style=discord.TextStyle.short,
            max_length=1000
        )
        
        self.add_item(self.game_statics)
        self.add_item(self.evidence)
    
    def extract_statics_from_text(self, text):
        """
        –ò–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç–∏–∫–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞
        
        Args:
            text: –¢–µ–∫—Å—Ç –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏–∫–æ–≤
            
        Returns:
            –°–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–∏–∫–æ–≤
        """
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞ –∫–∞–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç–∏–∫–∏
        words = re.findall(r'\b\w+\b', text)
        
        # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å–ª–æ–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç –∫–∞–∫ –æ–¥–∏–Ω —Å—Ç–∞—Ç–∏–∫
        if not words and text.strip():
            return [text.strip()]
            
        return words
    
    def find_users_by_statics(self, statics, guild):
        """
        –ò—â–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Å–ø–∏—Å–∫—É —Å—Ç–∞—Ç–∏–∫–æ–≤
        
        Args:
            statics: –°–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–∏–∫–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞
            guild: –û–±—ä–µ–∫—Ç —Å–µ—Ä–≤–µ—Ä–∞ Discord
            
        Returns:
            –°–ª–æ–≤–∞—Ä—å {—Å—Ç–∞—Ç–∏–∫: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ None}
        """
        user_manager = UserManager.get_instance()
        found_users = {}
        
        for static in statics:
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–Ω–∞—á–∞–ª–∞ –ø–æ —Ç–æ—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é
            users = user_manager.get_user_by_game_static(static)
            if users and len(users) > 0:
                # –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                user_id = users[0]['id']
                member = guild.get_member(user_id)
                if member:
                    found_users[static] = member
                else:
                    found_users[static] = None
            else:
                found_users[static] = None
                
        return found_users

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã"""
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
            await interaction.response.defer(ephemeral=True)
            
            order_data = {
                'order_type': self.order_type_label,
                'order_type_value': self.order_type_value,
                'game_statics': self.game_statics.value,
                'evidence': self.evidence.value
            }

            logger.info(f"–ü–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç {interaction.user.name} ({interaction.user.id}): {self.order_type_label}")

            # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç–∏–∫–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∏ –∏—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            statics = self.extract_statics_from_text(self.game_statics.value)
            found_users = self.find_users_by_statics(statics, interaction.guild)
            
            # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∏ –Ω–µ–Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            users_list = []
            
            if found_users:
                for static, member in found_users.items():
                    if member:
                        users_list.append(f"‚úÖ `{static}` ‚Üí {member.mention}")
                    else:
                        users_list.append(f"‚ùì `{static}` ‚Üí –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
                users_value = "\n".join(users_list)
            else:
                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å—Ç–∞—Ç–∏–∫–æ–≤, –±–µ—Ä–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç –∫–∞–∫ –æ–¥–∏–Ω —Å—Ç–∞—Ç–∏–∫
                users_value = f"‚ùì `{self.game_statics.value}` ‚Üí –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
            
            # –°–æ–∑–¥–∞–µ–º embed –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª –∑–∞–ø—Ä–æ—Å–æ–≤
            order_embed = discord.Embed(
                title=f":identification_card: –ó–∞–ø—Ä–æ—Å: {self.order_type_label}", 
                color=0x3498db  # –Ø—Ä–∫–∏–π —Å–∏–Ω–∏–π —Ü–≤–µ—Ç
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
            from datetime import datetime
            current_time = datetime.now().strftime("%d.%m.%Y %H:%M")
            
            # –ü–æ–ª–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑—á–∏–∫–µ
            order_embed.add_field(
                name="üë§ –ó–∞–∫–∞–∑—á–∏–∫",
                value=f"{interaction.user.mention}\nID: `{interaction.user.id}`",
                inline=False
            )
            
            # –ü–æ–ª–µ —Å —Ç–∏–ø–æ–º –∏ —Ü–µ–Ω–æ–π
            order_embed.add_field(
                name="üí∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                value=f"**–¢–∏–ø:** {self.order_type_label}\n**–°—Ç–æ–∏–º–æ—Å—Ç—å:** {self.get_order_price(self.order_type_value)}",
                inline=False
            )
            
            # –ü–æ–ª–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –ø–æ —Å—Ç–∞—Ç–∏–∫–∞–º
            order_embed.add_field(
                name="üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ —Å—Ç–∞—Ç–∏–∫–∞–º",
                value=users_value,
                inline=False
            )
            
            # –î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
            order_embed.add_field(
                name="üì∑ –î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
                value=f"```{self.evidence.value}```",
                inline=False
            )
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ—É—Ç–µ—Ä —Å ID –∑–∞–∫–∞–∑–∞ –∏ –≤—Ä–µ–º–µ–Ω–µ–º
            order_id = f"ORD-{interaction.user.id}-{int(datetime.now().timestamp())}"
            order_embed.set_footer(text=f"ID –∑–∞–∫–∞–∑–∞: {order_id} ‚Ä¢ {current_time}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º —É–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if interaction.user.avatar:
                order_embed.set_thumbnail(url=interaction.user.avatar.url)
            
            # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –µ—Å–ª–∏ –µ—Å—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—è
            if ORDERS_CATEGORY:
                channel_manager = ChannelManager(interaction.guild)
                
                channel = await channel_manager.create_order_channel(
                    user=interaction.user,
                    order_data=order_data,
                    embed=order_embed
                )

                if channel:
                    logger.info(f"–°–æ–∑–¥–∞–Ω –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: {channel.name}")
                    await NotificationManager.send_submission_notification(interaction.user, order_embed)
                else:
                    logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç {interaction.user.name}")
                    await interaction.followup.send(
                        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞. –ù–æ –≤–∞—à –∑–∞–ø—Ä–æ—Å –±—ã–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω.",
                        ephemeral=True
                    )
            else:
                await interaction.followup.send(
                    f"–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –µ–≥–æ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
                    ephemeral=True
                )

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç {interaction.user.name}: {e}", exc_info=True)
            await interaction.followup.send(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True
            )

    async def on_error(self, interaction: discord.Interaction, error: Exception):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã"""
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç {interaction.user.name}: {error}", exc_info=True)
        await interaction.response.send_message(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            ephemeral=True
        )

    def get_order_price(self, order_type_value):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É –∑–∞ –∑–∞–ø—Ä–æ—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ç–∏–ø–∞"""
        prices = {
            "conspiracy_2": "150.000-190.000",
            "conspiracy_2_activated": "150.000-190.000 + 15.000",
            "valuable_lesson": "80.000-100.000",
            "valuable_lesson_activated": "80.000-100.000 + 5.000",
            "valuable_batch": "178.000",
            "illegal_business": "174.000",
            "illegal_business_activated": "189.000",
            "grover_1": "137.000",
            "grover_1_activated": "142.000"
        }
        return prices.get(order_type_value, "–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞") 