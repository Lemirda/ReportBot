import discord
from tools.logger import Logger
from tools.view import FeedbackView, OrderView

logger = Logger.get_instance()

class MessageSender:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —ç–º–±–µ–¥–æ–≤ –≤ –∫–∞–Ω–∞–ª—ã Discord"""

    def __init__(self, bot: discord.Client):
        self.bot = bot

    async def clear_channel(self, channel: discord.TextChannel):
        """–û—á–∏—â–∞–µ—Ç –∫–∞–Ω–∞–ª –æ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π"""
        try:
            if isinstance(channel, discord.TextChannel):
                async for message in channel.history(limit=None):
                    await message.delete()
                logger.info(f"–°–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ {channel.name} –æ—á–∏—â–µ–Ω—ã")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–∞–Ω–∞–ª–∞: {e}", exc_info=True)

    async def send_embed(self, channel: discord.abc.Messageable, embed: discord.Embed, view=None):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —ç–º–±–µ–¥ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª —Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º view"""
        try:
            sent_message = await channel.send(embed=embed, view=view)
            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —ç–º–±–µ–¥–æ–º –≤ –∫–∞–Ω–∞–ª {getattr(channel, 'name', channel.id)}")
            return sent_message
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —ç–º–±–µ–¥–∞: {e}", exc_info=True)
            return None

    async def send_report_embed(self, channel: discord.abc.Messageable):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —ç–º–±–µ–¥ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏"""
        # –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—â–∞–µ–º –∫–∞–Ω–∞–ª, –µ—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª
        if isinstance(channel, discord.TextChannel):
            await self.clear_channel(channel)

        # –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥
        embed = discord.Embed(
            title="–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",
            description="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Å–µ—Ä–≤–µ—Ä–∞.",
            color=discord.Color.blue()
        )

        embed.set_image(url="https://cdn.discordapp.com/attachments/1339296664925503503/1368522112137957416/videoPreview.png?ex=68188709&is=68173589&hm=8316d77871c2864e6550bc158c0d8b3e8749bbc6a63322118282d47583832766&")

        embed.add_field(
            name="üö® –ñ–∞–ª–æ–±–∞", 
            value="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ñ–∞–ª–æ–±–∞', —á—Ç–æ–±—ã —Å–æ–æ–±—â–∏—Ç—å –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.", 
            inline=False
        )

        embed.add_field(
            name="üí° –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
            value="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ', —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ –∏–ª–∏ –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞.",
            inline=False
        )

        # –°–æ–∑–¥–∞–µ–º view –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–±–µ–¥
        view = FeedbackView(self.bot)
        return await self.send_embed(channel, embed, view) 

    async def send_order_embed(self, channel: discord.abc.Messageable):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —ç–º–±–µ–¥ —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–ø—Ä–æ—Å–∞"""
        if isinstance(channel, discord.TextChannel):
            await self.clear_channel(channel)

        embed = discord.Embed(
            title="–ó–∞–ø—Ä–æ—Å—ã",
            description="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –∑–∞–ø—Ä–æ—Å.",
            color=discord.Color.blue()
        )

        embed.set_image(url="https://cdn.discordapp.com/attachments/1339296664925503503/1368522112137957416/videoPreview.png?ex=68188709&is=68173589&hm=8316d77871c2864e6550bc158c0d8b3e8749bbc6a63322118282d47583832766&")
        
        embed.add_field(
            name="üìã –ó–∞–ø—Ä–æ—Å",
            value="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –∑–∞–ø—Ä–æ—Å', —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏—Å—Å–∏–∏.",
            inline=False
        )

        view = OrderView(self.bot)
        return await self.send_embed(channel, embed, view) 